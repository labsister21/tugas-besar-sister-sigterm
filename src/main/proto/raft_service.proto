syntax = "proto3";

package raft;

option java_multiple_files = true;
option java_package = "org.raft.raft.rpc";
option java_outer_classname = "RaftProto";

message LogEntry {
  enum LogType {
    SENTINEL = 0;
    GET = 1;
    SET = 2;
    STRLEN = 3;
    DEL = 4;
    APPEND = 5;
    C_OLD_NEW = 6;
    C_NEW = 7;
  }

  int64 term = 1;
  LogType type = 2;
  optional string key = 3;
  optional string value = 4;
  repeated string oldConf = 5;
  repeated string newConf = 6;
  repeated string nodeMap = 7;
}

// RequestVote RPC
message RequestVoteArgs {
  int64 term = 1;
  string candidateId = 2;
  int64 lastLogIndex = 3;
  int64 lastLogTerm = 4;
}

message RequestVoteReply {
  int64 term = 1;
  bool voteGranted = 2;
}

// AppendEntries RPC
message AppendEntriesArgs {
  int64 term = 1;
  string leaderId = 2;
  int64 prevLogIndex = 3;
  int64 prevLogTerm = 4;
  repeated LogEntry entries = 5;
  int64 leaderCommit = 6;
}

message AppendEntriesReply {
  int64 term = 1;
  bool success = 2;
  int64 matchIndex = 3;
}

service RaftService {
  rpc RequestVote(RequestVoteArgs) returns (RequestVoteReply);
  rpc AppendEntries(AppendEntriesArgs) returns (AppendEntriesReply);
}